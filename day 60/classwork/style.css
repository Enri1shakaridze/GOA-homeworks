/* 
flex-shrink -აკონტროლებს როგორი პროპორციით და რა ზომით შეიკუმშება ელემენტი
მას default ად გაწერილი აქვს მნიშვნელობა 1 რადგან თუ მშობელი ელემენტსგან განსხვავებით შვილი ელემენტი დიდია კონტეინერში ავტომატურად მოაქცევს და მშობელ ელემენტს არ გაცდება გარეთ
მოქმედებს მხოლოდ მაშინ როცა გადააჭარბებს შვილი ელემენტი სიდიდეში მშობელ ელემენტს თუ არ გადააჭარბებს და ადგილი მორჩება div ში flex-shrink არ იმოქმედებს ელემენტებზე,
თუ გავუწერთ მნიშვნელობა 0-ს შვილი ელემენტი გაცდება მშობელ ელემენტს;

gap - ის საშუალებით ელემენტებს შორის აჩენს ადგილს;

flex-direction - განაპირობებს კონტეინერში ელემენტები ჰორიზონტალურად განლაგდებიან თუ ვერტიკალურად
flex-direction ს აქვს 2 მნიშვნელობა ერთი row(ანუ ჰორიზონტალურად განალაგებს ელემენტებს) მეორე colum(ანუ ვერტიკალურად განალაგებს),
ასევე შეგვიძლია გავუწეროთ row-reverce ანუ ჰორიზონტალურად ადგილებს გადაიცვლის, colum-reverce ით ვერტიკალურად ადგილებს გადაიცვლის;

flex-wrap ის საშუალებით შემდეგ ხაზზე გადავა ელემენტი ან ელემენტები თუ ადგილები არ ჰყოფნით, no-wrap ის საშუალებით მაგ. ფოტოებს ბევრჯერ არ გაამეორებს თუ პატარაა, wrap-reverce ის საშუალებით მაგ. სურათები შეიცვლება ფოტოები გადავა ბოლოში და პირიქით
*/

.container{
    background-color: blanchedalmond;
    display: flex;
    width: 200px;
    height: 200px;
    border: 2px solid rgb(31, 30, 30);
}
.box{
    display: flex;
    width: 50px;
    height: 50px;
    border: 2px solid rgb(31, 30, 30);
    margin-left: 70px;
    margin-top: 150px;
    background-color: aliceblue;
}
